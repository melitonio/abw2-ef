// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAppNetCore;

#nullable disable

namespace abw2_ef.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220114170729_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAppNetCore.Models.Alumno", b =>
                {
                    b.Property<int>("AlumnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AlumnoID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CarreraID")
                        .HasColumnType("integer");

                    b.Property<string>("Dip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AlumnoID");

                    b.HasIndex("CarreraID");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Asignatura", b =>
                {
                    b.Property<int>("AsignaturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AsignaturaID"));

                    b.Property<int>("CarreraID")
                        .HasColumnType("integer");

                    b.Property<int?>("Creditos")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AsignaturaID");

                    b.HasIndex("CarreraID");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Calificacion", b =>
                {
                    b.Property<int>("CalificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CalificacionID"));

                    b.Property<int>("ConvocatiriaID")
                        .HasColumnType("integer");

                    b.Property<int>("MatriculaID")
                        .HasColumnType("integer");

                    b.Property<string>("NotaCategorica")
                        .HasColumnType("text");

                    b.Property<int?>("NotaNumerica")
                        .HasColumnType("integer");

                    b.HasKey("CalificacionID");

                    b.HasIndex("ConvocatiriaID");

                    b.HasIndex("MatriculaID");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Carrera", b =>
                {
                    b.Property<int>("CarreraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarreraID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CarreraID");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Convocatoria", b =>
                {
                    b.Property<int>("ConvocatoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConvocatoriaID"));

                    b.Property<int?>("Mes")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("ConvocatoriaID");

                    b.ToTable("Convocatoria");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Matricula", b =>
                {
                    b.Property<int>("MatriculaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatriculaID"));

                    b.Property<int>("AlumnoID")
                        .HasColumnType("integer");

                    b.Property<int>("AsignaturaID")
                        .HasColumnType("integer");

                    b.HasKey("MatriculaID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("AsignaturaID");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Alumno", b =>
                {
                    b.HasOne("WebAppNetCore.Models.Carrera", "Carrera")
                        .WithMany("Alumnos")
                        .HasForeignKey("CarreraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Asignatura", b =>
                {
                    b.HasOne("WebAppNetCore.Models.Carrera", "Carrera")
                        .WithMany("Asignaturas")
                        .HasForeignKey("CarreraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Calificacion", b =>
                {
                    b.HasOne("WebAppNetCore.Models.Convocatoria", "Convocatoria")
                        .WithMany()
                        .HasForeignKey("ConvocatiriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppNetCore.Models.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convocatoria");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Matricula", b =>
                {
                    b.HasOne("WebAppNetCore.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppNetCore.Models.Asignatura", "Asignatura")
                        .WithMany()
                        .HasForeignKey("AsignaturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Asignatura");
                });

            modelBuilder.Entity("WebAppNetCore.Models.Carrera", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Asignaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
